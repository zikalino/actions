# This is a basic workflow that is manually triggered

name: Build Component Apps

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      repo:
        type: choice
        description: Repository
        options:
        - espressif/esp-idf
        - zikalino/esp-idf
      branch:
        description: Branch
        type: string
        default: master
      components:
        description: Components
        type: string
        default: "['bootloader_support', 'console', 'cxx', 'efuse', 'esp_common', 'esp_event', 'esp_ringbuf', 'esp_rom', 'esp_system', 'esp_timer', 'freertos', 'heap', 'newlib', 'pthread', 'ulp']"
      targets:
        description: Targets
        type: string
        default: "['esp32', 'esp32c2', 'esp32c3', 'esp32c6', 'esp32s2', 'esp32s3', 'esp32h2']"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  container:
    strategy:
      matrix:
        # component: [none, newlib, console, efuse, freertos, esp_event, esp_system]
        component: ${{ fromJSON( inputs.components )}}
        target: ${{ fromJSON( inputs.targets )}}
        #exclude:
        #  - component: ${{ inputs.newlib && 'none' || 'newlib' }}
        #  - component: ${{ inputs.console && 'none' || 'console' }}
        #  - component: ${{ inputs.efuse && 'none' || 'efuse' }}
        #  - component: ${{ inputs.freertos && 'none' || 'freertos' }}
        #  - component: ${{ inputs.esp_event && 'none' || 'esp_event' }}
        #  - component: ${{ inputs.esp_system && 'none' || 'esp_system' }}
        #  - component: 'none'
    runs-on: ubuntu-latest
    container:
      image: zimkal/esp-qemu
      options: --user root
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.branch }}
          path: esp-idf
      - name: Install Tools
        run: |
          apt-get update && apt-get install -y python3.10-venv && apt-get install -y openocd
          pip install pyecharts
          pip install idf_build_apps
          pip install PyYaml
          export IDF_PATH=/__w/actions/actions/esp-idf
          cd /__w/actions/actions/esp-idf
          ./install.sh all
      - name: Build component/${{ matrix.component }} (${{ matrix.target }})
        run: |
          export IDF_PATH=/__w/actions/actions/esp-idf
          cd /__w/actions/actions/esp-idf
          . ./export.sh
          python3 ./tools/idf_tools.py install-python-env --features pytest,ci
          python3 /__w/actions/actions/esp-idf/tools/ci/ci_build_apps.py -v -t ${{ matrix.target }} --pytest-apps --collect-size-info size_info.txt components/${{ matrix.component }}
